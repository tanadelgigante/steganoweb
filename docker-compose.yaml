services:
  web-app:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: ${CONTAINER_UI_NAME}
    restart: always
    ports:
      - "${PORT_UI}:${PORT_UI_INTERNAL}"
    volumes:
      - ${VOLUME_BASE_PATH}/web:/app
      - /app/node_modules
      - ${HOSTS_CONFIG}:/etc/hosts.extra:ro
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - API_URL=${API_URL}
    depends_on:
      - api
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://127.0.0.1:${PORT_UI_INTERNAL} || exit 1"
      interval: "${HEALTHCHECK_INTERVAL}s"
      timeout: "${HEALTHCHECK_TIMEOUT_UI}s"
      retries: ${HEALTHCHECK_RETRIES}
      start_period: "${HEALTHCHECK_START_PERIOD_UI}s"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: ${CONTAINER_API_NAME}
    ports:
      - "${PORT_API}:${PORT_API_INTERNAL}"
    restart: always
    volumes:
      - ${VOLUME_BASE_PATH}/api:/app
      - ${VOLUME_BASE_PATH}/main.py:/app/main.py
      - ${HOSTS_CONFIG}:/etc/hosts.extra:ro
    env_file: .env
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_APP=app.py
      - MAIN_PY_PATH=/app/main.py
      - CORS_ORIGINS=${CORS_ORIGINS}
      - CORS_METHODS=${CORS_METHODS}
      - CORS_HEADERS=${CORS_HEADERS}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS}
      - CORS_MAX_AGE=${CORS_MAX_AGE}
    healthcheck:
      test: "bash -c 'echo -n > /dev/tcp/127.0.0.1/${PORT_API_INTERNAL}'"
      interval: "${HEALTHCHECK_INTERVAL}s"
      timeout: "${HEALTHCHECK_TIMEOUT_API}s"
      retries: ${HEALTHCHECK_RETRIES}
      start_period: "${HEALTHCHECK_START_PERIOD_API}s"
